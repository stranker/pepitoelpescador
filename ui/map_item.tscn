[gd_scene load_steps=11 format=3 uid="uid://buwicco4ujh2"]

[ext_resource type="FontFile" uid="uid://clsxpqfmryyob" path="res://assets/fonts/upheaval/upheavtt.ttf" id="1_vqpty"]
[ext_resource type="Texture2D" uid="uid://by8erumq8j2sx" path="res://assets/ui/map.jpg" id="2_qm837"]

[sub_resource type="GDScript" id="GDScript_vqpty"]
resource_name = "map_item"
script/source = "extends Control

@export var anim: AnimationPlayer
@export var name_label : Label
@export var image_rect : TextureRect

@export var map_data : MapData

signal select(scene)

var selected : bool = false

func set_data(data : MapData):
	map_data = data
	name_label.text = map_data.name
	image_rect.texture = map_data.image
	if not map_data.locked:
		anim.play(\"idle\")
	else:
		anim.play(\"lock\")
	pass

func unlock():
	if not map_data.locked: return
	map_data.locked = false
	anim.play(\"idle\")
	pass

func select_map():
	anim.play(\"selected\")
	pass

func on_select():
	select.emit(map_data)
	pass

func _on_click_area_gui_input(event: InputEvent) -> void:
	if map_data.locked: return
	if event is InputEventScreenTouch:
		if event.pressed:
			select_map()
	pass # Replace with function body.
"

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_vqpty"]
resource_local_to_scene = true
corner_radius_top_left = 128
corner_radius_top_right = 128
corner_radius_bottom_right = 128
corner_radius_bottom_left = 128

[sub_resource type="LabelSettings" id="LabelSettings_nrgxe"]
font = ExtResource("1_vqpty")
font_size = 32
outline_size = 2
outline_color = Color(0, 0, 0, 1)
shadow_size = 4
shadow_color = Color(0, 0, 0, 0.780392)

[sub_resource type="Animation" id="Animation_aqb6h"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("World:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(1, 1)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("World:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 1)]
}

[sub_resource type="Animation" id="Animation_vqpty"]
resource_name = "idle"
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("World:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 1)]
}

[sub_resource type="Animation" id="Animation_4od7s"]
resource_name = "lock"
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("World:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(0.259294, 0.259294, 0.259294, 1)]
}

[sub_resource type="Animation" id="Animation_qm837"]
resource_name = "selected"
length = 0.3
step = 0.1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("World:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.1, 0.3),
"transitions": PackedFloat32Array(0.5, 2, 1),
"update": 0,
"values": [Vector2(1, 1), Vector2(1.2, 1.2), Vector2(1, 1)]
}
tracks/1/type = "method"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0.3),
"transitions": PackedFloat32Array(1),
"values": [{
"args": [],
"method": &"on_select"
}]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_4od7s"]
_data = {
&"RESET": SubResource("Animation_aqb6h"),
&"idle": SubResource("Animation_vqpty"),
&"lock": SubResource("Animation_4od7s"),
&"selected": SubResource("Animation_qm837")
}

[node name="MapItem" type="Control" node_paths=PackedStringArray("anim", "name_label", "image_rect")]
custom_minimum_size = Vector2(208, 208)
layout_mode = 3
anchors_preset = 0
offset_right = 208.0
offset_bottom = 208.0
script = SubResource("GDScript_vqpty")
anim = NodePath("AnimationPlayer")
name_label = NodePath("MapName")
image_rect = NodePath("World/TextureRect")

[node name="World" type="Panel" parent="."]
clip_children = 2
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
pivot_offset = Vector2(104, 104)
theme_override_styles/panel = SubResource("StyleBoxFlat_vqpty")

[node name="TextureRect" type="TextureRect" parent="World"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
size_flags_vertical = 3
texture = ExtResource("2_qm837")
expand_mode = 1
stretch_mode = 6

[node name="MapName" type="Label" parent="."]
texture_filter = 2
custom_minimum_size = Vector2(0, 42)
layout_mode = 2
offset_left = -112.0
offset_top = -56.0
offset_right = 320.0
offset_bottom = -14.0
text = "Color Shores"
label_settings = SubResource("LabelSettings_nrgxe")
horizontal_alignment = 1
vertical_alignment = 1

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
&"": SubResource("AnimationLibrary_4od7s")
}
autoplay = "idle"

[node name="ClickArea" type="Control" parent="."]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[connection signal="gui_input" from="ClickArea" to="." method="_on_click_area_gui_input"]
